package demo.com;
/*
 * This code is part of the Android Development Course developed by Mobile Affairs LTD for demo purposes
 * http://www.mobile-affairs.com
 * 
 * Copyright (c) 2012 Mobile Affairs LTD.
 * Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php 
 *
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, 
 * and to permit persons to whom the Software is furnished to do so, subject to the following conditions
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

import demo.com.R;

import android.app.Activity;
import android.content.Context;
import android.os.Bundle;
import android.os.Environment;
import android.util.Log;
import android.view.View;

public class FilesDemoActivity extends Activity {
	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);

	}

	public void HandleFileIO(View button) {

//		
//		try {
		    //this will fail as we should supply full pathto file
//			FileOutputStream os = new FileOutputStream(new File("myfile1.txt"));
//		} catch (FileNotFoundException e1) {
//			// TODO Auto-generated catch block
//			e1.printStackTrace();
//		}
		
		
		
		
		// create file in the internal storage
		try {
			FileOutputStream output = this.openFileOutput("demo1.txt",
					Context.MODE_PRIVATE);
			OutputStreamWriter writer = new OutputStreamWriter(output);
			writer.write("some content comes here");
			writer.flush();
			writer.close();

		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		// read from internal storage
		try {

			FileInputStream input = this.openFileInput("demo1.txt");
			InputStreamReader reader = new InputStreamReader(input);
			char[] buf = new char[256];
			StringBuilder sb = new StringBuilder();
			int charsRead = reader.read(buf, 0, buf.length);
			while (charsRead > 0) {
				sb.append(buf);
				charsRead = reader.read(buf, 0, buf.length);
			}
			Log.i("FileDemo", sb.toString());
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		// check if file exists
		File file = new File(this.getFilesDir() + "/demo1.txt");
		if (file.exists()) {
			Log.i("FileDemo", "yes");
		} else {
			Log.i("FileDemo", "no");

		}

		// delete file
		this.deleteFile("demo1.txt");

		if (file.exists()) {
			Log.i("FileDemo", "not deleted");
		} else {
			Log.i("FileDemo", "deleted");
		}
		
		
		
		// external storage
		//----------------------------------------------------------------------------------
		if(!Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)){
			Log.e("FilesDemo","sdcard not present");
			return;
		}

		//requires permission  - otherwise returns null
		//<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"></uses-permission>
		File filePath = new File(this.getExternalFilesDir(null),"demo2.txt");
		FileOutputStream outStream;
		try {	

			outStream = new FileOutputStream(filePath);

			OutputStreamWriter extWriter = new OutputStreamWriter(outStream);
			extWriter.write("1234567890");
			extWriter.flush();
			extWriter.close();
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}